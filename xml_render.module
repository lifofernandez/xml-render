<?php 

/*
*DEV brach
*/


//setlocale(LC_ALL,"es_ES");
/**
 * Implements hook_menu() for node carpeta.
 */
function xml_render_menu() {
  $items['node/%node/xml'] = array(
    'title' => 'Descargar XML',
    'page callback' => 'node_xml',
    'page arguments' => array(1),
    'access callback' => 'carpeta_access_callback',
    'access arguments' => array(1), 
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    //'file' => 'node.pages.inc',
  );

  return $items;
}
/**
 * Implements hook_help.
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 */
function xml_render_help($path, $arg) {
  switch ($path) {
    case "admin/help#xml_render":
      return '<p>' . t("en la vista de la CARPETA simplemente clickear la pesta√±a 'Generar XML' para descargar el .xml ") . '</p>';
      break;
  }
} 

/**
 * Implements hook_perm().
 */
function xml_render_permission() {
  return array(
    'download xml' => array(
      'title' => t('Descargar XML'),
      'description' => t('Allow an user to download XML from de node'),
    ),
  );
}


///create XML tab access only for specific custom content type and user
function carpeta_access_callback($node) {
  if( ( $node->type == 'carpeta') && user_access('download xml') )return TRUE;
}

///collect field and field collection values
function node_xml($node) {
	$output = '<carpeta>';
 	// return t('Hello node with id !nid', array('!nid' => $node->nid));

	if(isset($node->title)){
		$titulo_de_la_carpeta = $node->title;
		$output = $output.'<carpeta_titulo>'.$titulo_de_la_carpeta.'</carpeta_titulo>';
	}

	$wrapper = entity_metadata_wrapper('node', $node);

	//AUTOR////////////////////////////

	$autor = xml_render_get_fields_collection($node, 'field_autor');
	$output = $output.$autor;
	
	/*
	$autor_items = field_get_items('node', $node, 'field_autor');

	//return print_r($autor_items);
	
	$autor = '';
	if(isset($autor_items)){
		foreach ($autor_items as $autor_item) {
			$fc_autor = field_collection_field_get_entity($autor_item);
			//$fc_name = $fc->field_name;

			///AUTOR NOMBRE///////
			$autor_nombre = '';
			if(isset($fc_autor->field_nombre))$autor_nombre = '<autor_nombre>'.$fc_autor->field_autor_nombre['und'][0]['safe_value'].'</autor_nombre>';
			//////////////////////////////////

			///AUTOR BIO///////
			$autor_bio = '';
			if(isset($fc_autor->field_biografia))$autor_bio = '<autor_biografia>'.$fc_autor->field_autor_biografia['und'][0]['safe_value'].'</autor_biografia>';
			//////////////////////
			
			$autor ='<autor>'.$autor_nombre.$autor_bio.'</autor>';
		}
		$output = $output.$autor;
	}
	*/

	//termina autor///////////////////////

	//INDTRODUCCION///////////////////////
	$introduccion = xml_render_get_fields($node, 'field_introduccion');
	$output = $output.$introduccion;
	//////////////////////////////////////

	//PROBLEMATICA_DEL_CAMPO//////////////
	$problematica = xml_render_get_fields($node, 'field_problematica_del_campo');
	$output = $output.$problematica;
	//////////////////////////////////////

	//FIELD_REFLEXIONES//////////////////
	$reflexiones = xml_render_get_fields($node, 'field_reflexiones');
	$output = $output.$reflexiones;
	/////////////////////////////////////

	//FIELD_MAPA_CONCEPTUAL//////////////
	$mapa = xml_render_get_fields($node, 'field_mapa_conceptual','uri');
	$output = $output.$mapa;
	////////////////////////////////////

	//FIELD_OBJETIVOS_DEL_CURSO//////////////
	$objetivos = xml_render_get_fields($node, 'field_objetivos_del_curso');
	$output = $output.$objetivos;
	////////////////////////////////////////

	//UNIDADES////////////////////////////////
	$unidad_items = field_get_items('node', $node, 'field_unidad');
	//return print_r(xml_render_get_fields_collection($node, 'field_unidad'));

	$unidades = '';
	if(isset($unidad_items)){
		foreach ($unidad_items as $n_item => $unidad_item) {
			$unidad_fc = field_collection_field_get_entity($unidad_item);
			//return print_r($unidad_fc);
			//return print_r($fc);
			//$fc_name = $unidad_fc->field_name;
			
			///UNIDAD TITULO///////////
			$unidad_titulo = '';
			if(isset($unidad_fc->field_unidad_titulo))$unidad_titulo = '<unidad_titulo>'.$unidad_fc->field_unidad_titulo['und'][0]['safe_value'].'</unidad_titulo>';
			/////////////////////////// 

			///UNIDAD OBJETIVOS////////
			$unidad_objetivos = '';
			if(isset($unidad_fc->field_unidad_objetivos))$unidad_objetivos = '<unidad_objetivos>'.$unidad_fc->field_unidad_objetivos['und'][0]['safe_value'].'</unidad_objetivos>';
			///////////////////////////
			
			///UNIDAD INTRODUCCION/////
			$unidad_introduccion = '';
			if(isset($unidad_fc->field_unidad_introduccion))$unidad_introduccion = '<unidad_introduccion>'.$unidad_fc->field_unidad_introduccion['und'][0]['safe_value'].'</unidad_introduccion>';
			/////////////////////////// 

			
			
			////RECURSOS////////////////////////////
			$unidad_recursos = $unidad_fc->field_recurso['und'];
			$recursos = '';
			if(isset($unidad_recursos)){
				foreach ($unidad_recursos as $n_item => $unidad_recurso) {
					$recurso_fc = field_collection_field_get_entity($unidad_recurso);
					//$recurso_fc_name = $recurso_fc->field_name;

					$tipo_recurso = taxonomy_term_load($recurso_fc->field_recurso_tipo['und'][0]['tid']);
					$tipo_name = $tipo_recurso->name;
				
					$tipo_name = normalizeChars($tipo_name);
					
					$recurso = '<recurso_'.$tipo_name.'>'.$recurso_fc->field_recurso_contenido['und'][0]['safe_value'].'</recurso_'.$tipo_name.'>';
					$recursos = $recursos.$recurso;

				}
			}
			//termina recursos////////////////////////
			
			///APARTADOS//////////////////////////////
			$unidad_apartados = $unidad_fc->field_apartado['und'];
			$apartados = '';
			if(isset($unidad_apartados)){
				foreach ($unidad_apartados as $n_item => $unidad_apartado) {
					$apartado_fc = field_collection_field_get_entity($unidad_apartado);
					//$apartado_fc_name = $apartado_fc->field_name;
					$apartado_titulo = '';
					if(isset($apartado_fc->field_apartado_titulo))$apartado_titulo = '<apartado_titulo>'.$apartado_fc->field_titulo_del_apartado['und'][0]['safe_value'].'</apartado_titulo>';

					///APARTADOS RECURSOS/////////////////////////
					$apartado_recursos = $apartado_fc->field_recurso['und'];
					$recursos = '';
					if(isset($apartado_recursos)){
						foreach ($apartado_recursos as $n_item => $apartado_recurso) {
							$apartado_recurso_fc = field_collection_field_get_entity($apartado_recurso);
							//$recurso_fc_name = $apartado_recurso_fc->field_name;
							//return print_r($recurso_fc->field_tipo_de_recurso);
							$tipo_recurso = taxonomy_term_load($apartado_recurso_fc->field_recurso_tipo['und'][0]['tid']);
							$tipo_name = $tipo_recurso->name;
							
							$tipo_name = normalizeChars($tipo_name);

							//$recurso_tipo = '<field_tipo_de_recurso>'.$tax_name.'</field_tipo_de_recurso>';
							$recurso = '<recurso_'.$tipo_name.'>'.$apartado_recurso_fc->field_recurso_contenido['und'][0]['safe_value'].'</recurso_'.$tipo_name.'>';
							$recursos = $recursos.$recurso;

						}
					}
					//termina apartado recursos/////////////////////

					///SUB_APARTADOS////////////////////////////////
					$unidad_sub_apartados = $apartado_fc->field_subapartado['und'];
					$sub_apartados = '';
					if(isset($unidad_sub_apartados)){
						foreach ($unidad_sub_apartados as $n_item => $unidad_sub_apartado) {
							$sub_apartado_fc = field_collection_field_get_entity($unidad_sub_apartado);
							
							$sub_apartado_titulo = '';
							if(isset($sub_apartado_fc->field_subapartado_titulo))$sub_apartado_titulo = '<subapartado_titulo>'.$sub_apartado_fc->field_subapartado_titulo['und'][0]['safe_value'].'</subapartado_titulo>';
							//return var_dump($sub_apartado_titulo);

							///SUB_APARTADOS RECURSOS//////////////////////
							$sub_apartado_recursos = $sub_apartado_fc->field_recurso['und'];
							$recursos = '';
							if(isset($sub_apartado_recursos)){
								foreach ($sub_apartado_recursos as $n_item => $sub_apartado_recurso) {
									$sub_apartado_recurso_fc = field_collection_field_get_entity($sub_apartado_recurso);
									$tipo_recurso = taxonomy_term_load($sub_apartado_recurso_fc->field_recurso_tipo['und'][0]['tid']);
									$tipo_name = $tipo_recurso->name;
									
									$tipo_name = normalizeChars($tipo_name);

									$recurso = '<recurso_'.$tipo_name.'>'.$sub_apartado_recurso_fc->field_recurso_contenido['und'][0]['safe_value'].'</recurso_'.$tipo_name.'>';
									$recursos = $recursos.$recurso;

								}
							}
							//termina sub apartado recursos////////////////////
							$sub_apartados = $sub_apartados.'<sub_apartado>'.$sub_apartado_titulo.$recursos.'</sub_apartado>';
					
						}
					}
					//termina sub apartados////////////////////////////
					$apartados = $apartados.'<apartado>'.$apartado_titulo.$recursos.$sub_apartados.'</apartado>';
				
				}
			}
			//termina apartados////////////////////////////

			///REFERECIAS BIBLIOGRAFICAS///////
			$unidad_bibliografia = '';
			if(isset($unidad_fc->field_unidad_bibliografia))$unidad_bibliografia = '<unidad_bibliografia>'.$unidad_fc->field_unidad_bibliografia['und'][0]['safe_value'].'</unidad_bibliografia>';
			///////////////////////////


			$unidades = $unidades.'<unidad>'.$unidad_titulo.$unidad_introduccion.$unidad_objetivos.$recursos.$apartados.$unidad_bibliografia.'</unidad>';
	
		}
		$output = $output.$unidades;
	}
	//termina unidades////////////////////////////




	///FINAL
	///sum all fields
	$output = $output.'</carpeta>';

	//build XML DOM
	$dom = new DOMDocument;
	$dom->preserveWhiteSpace = FALSE;
	$dom->loadXML($output);
	$dom->formatOutput = TRUE;
	//echo $dom->saveXml();
	
	$XML_output = $dom->saveXml();
	saveXML($titulo_de_la_carpeta, $XML_output);
	
	//return '<pre>'.$XML_output.'</pre>';
}

function saveXML($titulo,$contenido) {
	$titulo = normalizeChars($titulo);
	$filename = $titulo.".xml";
	ob_start();
	header('Pragma: public');
	header('Expires: 0');
	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
	header('Content-Type: text/xml');
	header('Content-Disposition: attachment; filename="'.$filename.'"');
	header('Content-Transfer-Encoding: 7bit');
  	echo($contenido);
	ob_end_flush();
	die();
}

function normalizeChars($s) {
	$replace = array(
		'√Ä'=>'A', '√Å'=>'A', '√Ç'=>'A', '√É'=>'A', '√Ñ'=>'Ae', '√Ö'=>'A', '√Ü'=>'A', 'ƒÇ'=>'A',
		'√†'=>'a', '√°'=>'a', '√¢'=>'a', '√£'=>'a', '√§'=>'ae', '√•'=>'a', 'ƒÉ'=>'a', '√¶'=>'ae',
		'√æ'=>'b', '√û'=>'B',
		'√á'=>'C', '√ß'=>'c',
		'√à'=>'E', '√â'=>'E', '√ä'=>'E', '√ã'=>'E',
		'√®'=>'e', '√©'=>'e', '√™'=>'e', '√´'=>'e', 
		'ƒû'=>'G', 'ƒü'=>'g',
		'√å'=>'I', '√ç'=>'I', '√é'=>'I', '√è'=>'I', 'ƒ∞'=>'I', 'ƒ±'=>'i', '√¨'=>'i', '√≠'=>'i', '√Æ'=>'i', '√Ø'=>'i',
		'√ë'=>'N',
		'√í'=>'O', '√ì'=>'O', '√î'=>'O', '√ï'=>'O', '√ñ'=>'Oe', '√ò'=>'O', '√∂'=>'oe', '√∏'=>'o',
		'√∞'=>'o', '√±'=>'n', '√≤'=>'o', '√≥'=>'o', '√¥'=>'o', '√µ'=>'o',
		'≈†'=>'S', '≈°'=>'s', '≈û'=>'S', '»ô'=>'s', '»ò'=>'S', '≈ü'=>'s', '√ü'=>'ss',
		'»õ'=>'t', '»ö'=>'T',
		'√ô'=>'U', '√ö'=>'U', '√õ'=>'U', '√ú'=>'Ue',
		'√π'=>'u', '√∫'=>'u', '√ª'=>'u', '√º'=>'ue', 
		'√ù'=>'Y',
		'√Ω'=>'y', '√Ω'=>'y', '√ø'=>'y',
		'≈Ω'=>'Z', '≈æ'=>'z'
	);

	$s = strtolower($s);
	$s = str_replace(' ', '_', $s);	
 	return strtr($s, $replace);
}



//////FUNCION PARA EXTRAER FIELDS

///fields regulares (no coleccion de fields)
/// 1st param = node element, 2nd param = field name;  3nd param = tipe of value;

function xml_render_get_fields($node, $field, $value_to_get = 'safe_value'){

	$field_items = field_get_items('node', $node, $field);
	$field_name = str_replace('field_', '', $field);

	$fields_output = '';

	if(isset($field_items)){
		foreach ($field_items as $n_item => $field_item) {
			if($value_to_get != 'uri'){
                                $field_value = $field_item[$value_to_get];
                                $fields_output = $fields_output.'<'.$field_name.'>'.$field_value.'</'.$field_name.'>';
                  	}
                  	if($value_to_get == 'uri'){
                  		$field_value = file_create_url($field_item[$value_to_get]);
                	  	$fields_output = $fields_output.'<'.$field_name.'><Image href="file:'.$field_value.'"></Image></'.$field_name.'>';
                	}
		}
	}

	return $fields_output;

}


///fields collections (no coleccion de fields)
/// 1st param = node element, 2nd param = field name;  3nd param = tipe of value;

function xml_render_get_fields_collection($node, $field){
	
	$fc_fields = field_get_items('node', $node, $field);

	$collection_name = str_replace('field_', '', $field);

	$fields_output = '';

	$ids = array();
	foreach ($fc_fields as $fc_field) {
   		$ids[] = $fc_field['value'];
	}

	$collections = field_collection_item_load_multiple($ids);

	//Loop over the array - if you have more than one entity
	foreach($collections as $col_key => $collection) {
	    //$collection = $collections[$i];
		$this_collection = '<'.$collection_name.'>';

	    //Iterate over all member vars of the FieldCollectionItemEntity object
	    foreach($collection as $key => $item){
	    	$this_item = '';

	        //Look for fields - there are some other class vars, too.
	        if (strpos ($key, 'field') !== false){

	            $this_name = $collection_name.'_'.str_replace('field_', '', $key);

	           	//Search for textfields 
	            if (isset($item['und'][0]['safe_value'])){
	              
	                $this_item = "<".$this_name.">".$item['und'][0]['safe_value']."</".$this_name.">";
	            	
	            }
	        }

	        $this_collection  = $this_collection.$this_item; 
	    }

	    $fields_output = $fields_output.$this_collection.'</'.$collection_name.'>';                    
	} 



	return $fields_output;

}
