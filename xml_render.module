<?php 

//setlocale(LC_ALL,"es_ES");

/**
 * Implements hook_help.
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 */

function xml_render_help($path, $arg) {
  switch ($path) {
    case "admin/help#xml_render":
      return '<p>' . t("Displays xml of the content") . '</p>';
      break;
  }
} 

/**
 * Implements hook_menu().
 */
function xml_render_menu() {
  $items['node/%node/xml'] = array(
    'title' => 'Descargar XML',
    'page callback' => 'node_xml',
    'page arguments' => array(1),
    'access callback' => 'node_access',
    'access arguments' => array('update', 1),
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    //'file' => 'node.pages.inc',
  );
  return $items;
}


function node_xml($node) {
	$output = '<carpeta>';
 	// return t('Hello node with id !nid', array('!nid' => $node->nid));
 	// return print_r($node);
	
	if(isset($node->title)){
		$titulo_de_la_carpeta = $node->title;
		$output = $output.'<titulo_de_la_carpeta>'.$titulo_de_la_carpeta.'</titulo_de_la_carpeta>';
	}

	$wrapper = entity_metadata_wrapper('node', $node);

	//AUTOR//////////////
	$autor_items = field_get_items('node', $node, 'field_autor');
	$autor = '';
	if(isset($autor_items)){
		foreach ($autor_items as $autor_item) {
			$fc = field_collection_field_get_entity($autor_item);
			//return print_r($fc);
			$fc_name = $fc->field_name;
			
			$autor_nombre = '<nombre>'.$fc->field_nombre['und'][0]['safe_value'].'</nombre>';
			$autor_bio = '<biografia>'.$fc->field_biografia['und'][0]['safe_value'].'</biografia>';
			
			$autor ='<autor>'.$autor_nombre.$autor_bio.'</autor>';
		}
		$output = $output.$autor;
	}
	//////////////////////

	//INDTRODUCCION//////////////
	$introduccion_items = field_get_items('node', $node, 'field_introduccion');
	if(isset($introduccion_items)){
		$introduccion = '<introduccion>'.$introduccion_items[0]['safe_value'].'</introduccion>';
		$output = $output.$introduccion;
	//////////////////////
	}

	//PROBLEMATICA_DEL_CAMPO//////////////
	$problematica_items = field_get_items('node', $node, 'field_problematica_del_campo');
	if(isset($problematica_items)){
	$problematica = '<problematica_del_campo>'.$introduccion_items[0]['safe_value'].'</problematica_del_campo>';
		$output = $output.$problematica;
	//////////////////////
	}

	//FIELD_REFLEXIONES//////////////
	$reflexiones_items = field_get_items('node', $node, 'field_reflexiones');
	if(isset($reflexiones_items)){	
		$reflexiones = '<reflexiones>'.$reflexiones_items[0]['safe_value'].'</reflexiones>';
		$output = $output.$reflexiones;
	//////////////////////
	}

	//FIELD_MAPA_CONCEPTUAL//////////////
	$mapa_items = field_get_items('node', $node, 'field_mapa_conceptual');
	if(isset($mapa_items)){
		$mapa = '<mapa_conceptual>'.$mapa_items[0]['uri'].'</mapa_conceptual>';
		//return print_r($mapa_items);
		$output = $output.$mapa;
	//////////////////////
	}

	//FIELD_OBJETIVOS_DEL_CURSO//////////////
	$objetivos_items = field_get_items('node', $node, 'field_objetivos_del_curso');
	if(isset($objetivos_items)){
		$objetivos = '<objetivos_del_curso>'.$objetivos_items[0]['safe_value'].'</objetivos_del_curso>';
		$objetivos = $output.$objetivos;
	}
	//////////////////////

	//UNIDAD//////////////
	$unidad_items = field_get_items('node', $node, 'field_unidad');

	$unidades = '';
	if(isset($unidad_items)){
		foreach ($unidad_items as $n_item => $unidad_item) {
			$unidad_fc = field_collection_field_get_entity($unidad_item);
			//return print_r($unidad_fc);
			//return print_r($fc);
			$fc_name = $unidad_fc->field_name;
			
			$unidad_titulo = '<titulo_de_la_unidad>'.$unidad_fc->field_titulo_de_la_unidad['und'][0]['safe_value'].'</titulo_de_la_unidad>';
			$unidad_introduccion = '<introduccion_a_la_unidad>'.$unidad_fc->field_introduccion_a_la_unidad['und'][0]['safe_value'].'</introduccion_a_la_unidad>';
			$unidad_objetivos = '<objetivos_de_la_unidad>'.$unidad_fc->field_objetivos_de_la_unidad['und'][0]['safe_value'].'</objetivos_de_la_unidad>';
			
			////RECURSOS////////
			$unidad_recursos = $unidad_fc->field_recurso['und'];
			$recursos = '';
			if(isset($unidad_recursos)){
				foreach ($unidad_recursos as $n_item => $unidad_recurso) {
					$recurso_fc = field_collection_field_get_entity($unidad_recurso);
					$recurso_fc_name = $recurso_fc->field_name;
					//return print_r($recurso_fc->field_tipo_de_recurso);
					$tipo_recurso = taxonomy_term_load($recurso_fc->field_tipo_de_recurso['und'][0]['tid']);
					$tipo_name = $tipo_recurso->name;
					$tipo_name = strtolower($tipo_name);
					$tipo_name = str_replace(' ', '_', $tipo_name);
					$tipo_name = normalizeChars($tipo_name);
					

					//$recurso_tipo = '<field_tipo_de_recurso>'.$tax_name.'</field_tipo_de_recurso>';
					$recurso = '<recurso_'.$tipo_name.'>'.$recurso_fc->field_contenido['und'][0]['safe_value'].'</recurso_'.$tipo_name.'>';
					$recursos = $recursos.$recurso;

				}
			}

			///APARTADOS
			$unidad_apartados = $unidad_fc->field_apartado['und'];
			$apartados = '';
			if(isset($unidad_apartados)){
				foreach ($unidad_apartados as $n_item => $unidad_apartado) {
					$apartado_fc = field_collection_field_get_entity($unidad_apartado);
					//$apartado_fc_name = $apartado_fc->field_name;
					if(isset($apartado_fc->field_titulo_del_apartado))$apartado_titulo = '<titulo_del_apartado>'.$apartado_fc->field_titulo_del_apartado['und'][0]['safe_value'].'</titulo_del_apartado>';

					


					///APARTADOS RECURSOS
					$apartado_recursos = $apartado_fc->field_recurso['und'];
					$recursos = '';
					if(isset($apartado_recursos)){
						foreach ($apartado_recursos as $n_item => $apartado_recurso) {
							$apartado_recurso_fc = field_collection_field_get_entity($apartado_recurso);
							//$recurso_fc_name = $apartado_recurso_fc->field_name;
							//return print_r($recurso_fc->field_tipo_de_recurso);
							$tipo_recurso = taxonomy_term_load($apartado_recurso_fc->field_tipo_de_recurso['und'][0]['tid']);
							$tipo_name = $tipo_recurso->name;
							$tipo_name = strtolower($tipo_name);
							$tipo_name = str_replace(' ', '_', $tipo_name);
							$tipo_name = normalizeChars($tipo_name);

							//$recurso_tipo = '<field_tipo_de_recurso>'.$tax_name.'</field_tipo_de_recurso>';
							$recurso = '<recurso_'.$tipo_name.'>'.$apartado_recurso_fc->field_contenido['und'][0]['safe_value'].'</recurso_'.$tipo_name.'>';
							$recursos = $recursos.$recurso;

						}
					}
					//////////

					

					///SUB_APARTADOS
					$unidad_sub_apartados = $apartado_fc->field_sub_apartado['und'];
					$sub_apartados = '';
					if(isset($unidad_sub_apartados)){
						foreach ($unidad_sub_apartados as $n_item => $unidad_sub_apartado) {
							$sub_apartado_fc = field_collection_field_get_entity($unidad_sub_apartado);
							

							if(isset($sub_apartado_fc->field_titulo_del_sub_apartado))$sub_apartado_titulo = '<titulo_del_sub_apartado>'.$sub_apartado_fc->field_titulo_del_sub_apartado['und'][0]['safe_value'].'</titulo_del_sub_apartado>';
							//return var_dump($sub_apartado_titulo);

							///SUB_APARTADOS RECURSOS
							$sub_apartado_recursos = $sub_apartado_fc->field_recurso['und'];
							$recursos = '';
							if(isset($sub_apartado_recursos)){
								foreach ($sub_apartado_recursos as $n_item => $sub_apartado_recurso) {
									$sub_apartado_recurso_fc = field_collection_field_get_entity($sub_apartado_recurso);
									$tipo_recurso = taxonomy_term_load($sub_apartado_recurso_fc->field_tipo_de_recurso['und'][0]['tid']);
									$tipo_name = $tipo_recurso->name;
									$tipo_name = strtolower($tipo_name);
									$tipo_name = str_replace(' ', '_', $tipo_name);
									$tipo_name = normalizeChars($tipo_name);

									$recurso = '<recurso_'.$tipo_name.'>'.$sub_apartado_recurso_fc->field_contenido['und'][0]['safe_value'].'</recurso_'.$tipo_name.'>';
									$recursos = $recursos.$recurso;

								}
							}
							//////////


							

							$sub_apartados = $sub_apartados.'<sub_apartado>'.$sub_apartado_titulo.$recursos.'</sub_apartado>';
						}
					}
					////////////


			

					$apartados = $apartados.'<apartado>'.$apartado_titulo.$recursos.$sub_apartados.'</apartado>';
				}
			}
			////////////

			
			
			

			$unidades = $unidades.'<unidad>'.$unidad_titulo.$unidad_introduccion.$unidad_objetivos.$recursos.$apartados.'</unidad>';
		}
		$output = $output.$unidades;
	}
	//////////////////////



	///FINAL
	///sum all fields
	$output = $output.'</carpeta>';

	//build XML document
	$dom = new DOMDocument;
	//$dom->preserveWhiteSpace = FALSE;
	$dom->loadXML($output);
	$dom->formatOutput = TRUE;
	//echo $dom->saveXml();
	
	$XML_output = $dom->saveXml();
	saveXML($titulo_de_la_carpeta, $XML_output);
	
	//return '<pre>'.$XML_output.'</pre>';
	
}



function saveXML($titulo,$contenido) {
	$titulo = strtolower($titulo);
	$titulo = str_replace(' ', '_', $titulo);
	$titulo = normalizeChars($titulo);
	$filename = $titulo.".xml";
	ob_start();
	header('Pragma: public');
	header('Expires: 0');
	header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
	header('Content-Type: text/xml');
	header('Content-Disposition: attachment; filename="'.$filename.'"');
	header('Content-Transfer-Encoding: 7bit');
  	echo($contenido);
	ob_end_flush();
	die();
}

function normalizeChars($s) {
 $replace = array(
  'À'=>'A', 'Á'=>'A', 'Â'=>'A', 'Ã'=>'A', 'Ä'=>'Ae', 'Å'=>'A', 'Æ'=>'A', 'Ă'=>'A',
  'à'=>'a', 'á'=>'a', 'â'=>'a', 'ã'=>'a', 'ä'=>'ae', 'å'=>'a', 'ă'=>'a', 'æ'=>'ae',
  'þ'=>'b', 'Þ'=>'B',
  'Ç'=>'C', 'ç'=>'c',
  'È'=>'E', 'É'=>'E', 'Ê'=>'E', 'Ë'=>'E',
  'è'=>'e', 'é'=>'e', 'ê'=>'e', 'ë'=>'e', 
  'Ğ'=>'G', 'ğ'=>'g',
  'Ì'=>'I', 'Í'=>'I', 'Î'=>'I', 'Ï'=>'I', 'İ'=>'I', 'ı'=>'i', 'ì'=>'i', 'í'=>'i', 'î'=>'i', 'ï'=>'i',
  'Ñ'=>'N',
  'Ò'=>'O', 'Ó'=>'O', 'Ô'=>'O', 'Õ'=>'O', 'Ö'=>'Oe', 'Ø'=>'O', 'ö'=>'oe', 'ø'=>'o',
  'ð'=>'o', 'ñ'=>'n', 'ò'=>'o', 'ó'=>'o', 'ô'=>'o', 'õ'=>'o',
  'Š'=>'S', 'š'=>'s', 'Ş'=>'S', 'ș'=>'s', 'Ș'=>'S', 'ş'=>'s', 'ß'=>'ss',
  'ț'=>'t', 'Ț'=>'T',
  'Ù'=>'U', 'Ú'=>'U', 'Û'=>'U', 'Ü'=>'Ue',
  'ù'=>'u', 'ú'=>'u', 'û'=>'u', 'ü'=>'ue', 
  'Ý'=>'Y',
  'ý'=>'y', 'ý'=>'y', 'ÿ'=>'y',
  'Ž'=>'Z', 'ž'=>'z'
 );
 return strtr($s, $replace);
}